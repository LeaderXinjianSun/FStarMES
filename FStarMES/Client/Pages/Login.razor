@page "/login"
@using System.Net.Http.Headers;
<div>
    <Form Model=@model OnFinish="OnLogin" LabelCol="new ColLayoutParam(){Span = 6}">
        <FormItem Label="用户名">
            <Input @bind-Value="context.UserName" Style="width: 300px"></Input>
        </FormItem>
            <FormItem Label="密码">
            <Input @bind-Value="context.Password" Type="password" Style="width: 300px"></Input>
        </FormItem>
        <FormItem WrapperColOffset="6">
            <Button Type="@ButtonType.Primary" HtmlType="submit">登录</Button>
        </FormItem>
    </Form>
</div>
@code {
    //@inject NavigationManager NavigationManager
    [Inject] public HttpClient Http { get; set; }
    [Inject] public MessageService MsgSvr { get; set; }
    [Inject] public AuthenticationStateProvider AuthProvider { get; set; }
    [Inject] public NavigationManager NavigationManager { get; set; }
    LoginDto model = new LoginDto();
    async void OnLogin()
    {
        var httpResponse = await Http.PostAsJsonAsync<LoginDto>($"api/Auth/Login", model);
        UserDto result = await httpResponse.Content.ReadFromJsonAsync<UserDto>();
        if (string.IsNullOrWhiteSpace(result?.Token) == false && model.UserName.ToLower() == "admin")
        {
            MsgSvr.Success($"登录成功");
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", result.Token);
            ((AuthProvider)AuthProvider).MarkUserAsAuthenticated(result);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            MsgSvr.Error($"用户名或密码错误");
        }
        InvokeAsync(StateHasChanged);
    }
}