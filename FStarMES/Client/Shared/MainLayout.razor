@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@using System.Net.Http.Headers;
<CascadingAuthenticationState>
    <Layout Class="layout">
        <Header>
            <div class="logo">
                <a href="">
                    <img src="/images/logoLDR.png" width="90" height="30" alt="Alternate Text" />
                </a>
                <span style="float: right">
                    <AuthorizeView>
                        <Authorized>
                            <Button OnClick="@OnLogoutButtonClick">登出</Button>
                        </Authorized>
                        <NotAuthorized>
                            <Button OnClick="@OnLoginButtonClick">登录</Button>
                        </NotAuthorized>
                    </AuthorizeView>
                </span>
            </div>
            <Menu Theme="MenuTheme.Dark" Mode="MenuMode.Horizontal" DefaultSelectedKeys=@(new[]{"1"})>
                <MenuItem Key="1" RouterLink="/">查询</MenuItem>
                <MenuItem Key="2" RouterLink="/setting">设置</MenuItem>
            </Menu>
        </Header>
        <Content Style="padding: 0 50px;">
            <div class="site-layout-content">@Body</div>
        </Content>
        <Footer Style="text-align: center; ">FStarMES App ©2022 Created by Leader RD</Footer>
    </Layout>
</CascadingAuthenticationState>

<style>
    .site-layout-content {
        background: #fff;
        padding: 24px;
        min-height: 1200px;
        margin: 66px 0 0 0;
    }
    #components-layout-demo-top .logo {
        width: 120px;
        height: 31px;
        background: rgba(255, 255, 255, 0.2);
        margin: 16px 24px 16px 0;
        float: left;
    }
</style>
@code{
    [Inject] public MessageService MsgSvr { get; set; }
    [Inject] public AuthenticationStateProvider AuthProvider { get; set; }
    private void OnLoginButtonClick()
    {
        NavigationManager.NavigateTo("/login");
    }
    private void OnLogoutButtonClick()
    {
        ((AuthProvider)AuthProvider).MarkUserAsLoggedOut();
        InvokeAsync(StateHasChanged);
        MsgSvr.Success($"登出成功");
    }
}